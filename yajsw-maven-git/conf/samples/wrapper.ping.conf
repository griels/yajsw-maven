#********************************************************************
# Wrapper Properties - Sample file for running an image (ping)
#********************************************************************
# Java Application
# YAJSW: default is "java"
# wrapper.java.command=java
wrapper.image = ping localhost


# Java Main class.  This class must implement the WrapperListener interface
#  or guarantee that the WrapperManager class is initialized.  Helper
#  classes are provided to do this for you.  See the Integration section
#  of the documentation for details.
# YAJSW: default is "org.rzo.yajsw.WrapperMain"
# wrapper.java.mainclass=org.rzo.yajsw.WrapperMain

# Java Classpath (include wrapper.jar)  Add class path elements as
#  needed starting from 1
# YAJSW: all libs required by YAJSW are in the manifest of the wrapper.jar -> only classpath of your application is required
# wrapper.java.classpath.1=wrapper.jar

# Java Library Path
# YAJSW: required dll are encapsulated in jar files -> only library path of your application required
# wrapper.java.library.path.1=../lib

# Java Additional Parameters
#wrapper.java.additional.1=

# Initial Java Heap Size (in MB)
# YAJSW: currently not implemented -> use for example wrapper.java.additional.<n>=-Xmx
#wrapper.java.initmemory=3

# Maximum Java Heap Size (in MB)
# YAJSW: currently not implemented -> use for example wrapper.java.additional.<n>=-Xmx
#wrapper.java.maxmemory=64

# Application parameters.  Add parameters as needed starting from 1
# YAJSW: to specify the main class please use wrapper.java.app.mainclass=
# wrapper.app.parameter.1=<YourMainClass>

# YAJSW: Application main class
#wrapper.java.app.mainclass=<YourMainClass>



#********************************************************************
# Wrapper Logging Properties
#********************************************************************
# Format of output for the console.  (See docs for formats)
# YAJSW: currently not implemented -> can be implemented by configuration of java logging
 wrapper.console.format=PM

# Log Level for console output.  (See docs for log levels)
# YAJSW: currently not implemented -> can be implemented by configuration of java logging
 wrapper.console.loglevel=INFO

# Log file to use for wrapper output logging.
# YAJSW: currently not implemented -> can be implemented by configuration of java logging
# wrapper.logfile=../logs/wrapper.log

# Format of output for the log file.  (See docs for formats)
# YAJSW: currently not implemented -> can be implemented by configuration of java logging
# wrapper.logfile.format=LPTM

# Log Level for log file output.  (See docs for log levels)
# YAJSW: currently not implemented -> can be implemented by configuration of java logging
# wrapper.logfile.loglevel=INFO

# Maximum size that the log file will be allowed to grow to before
#  the log is rolled. Size is specified in bytes.  The default value
#  of 0, disables log rolling.  May abbreviate with the 'k' (kb) or
#  'm' (mb) suffix.  For example: 10m = 10 megabytes.
# YAJSW: currently not implemented -> can be implemented by configuration of java logging
# wrapper.logfile.maxsize=0

# Maximum number of rolled log files which will be allowed before old
#  files are deleted.  The default value of 0 implies no limit.
# YAJSW: currently not implemented -> can be implemented by configuration of java logging
# wrapper.logfile.maxfiles=0

# Log Level for sys/event log output.  (See docs for log levels)
# YAJSW: currently not implemented -> can be implemented by configuration of java logging
# wrapper.syslog.loglevel=NONE
wrapper.tray = true

#********************************************************************
# Wrapper Windows Properties
#********************************************************************
# Title to use when running as a console
wrapper.console.title=ping

#********************************************************************
# Wrapper Windows NT/2000/XP Service Properties
#********************************************************************
# WARNING - Do not modify any of these properties when an application
#  using this configuration file has been installed as a service.
#  Please uninstall the service before modifying this section.  The
#  service can then be reinstalled.

# Name of the service
wrapper.ntservice.name=ping

# Display name of the service
wrapper.ntservice.displayname=ping

# Description of the service
wrapper.ntservice.description=ping

# Service dependencies.  Add dependencies as needed starting from 1
# wrapper.ntservice.dependency.1=

# Mode in which the service is installed.  AUTO_START or DEMAND_START
# YAJSW: currently not implemented -> defaults to MANUAL
# wrapper.ntservice.starttype=AUTO_START

# Allow the service to interact with the desktop.
# YAJSW: currently not implemented -> defaults to false
# wrapper.ntservice.interactive=false

